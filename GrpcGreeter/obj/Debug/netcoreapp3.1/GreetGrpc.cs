// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcGreeter {
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    static readonly grpc::Marshaller<global::GrpcGreeter.GroupListRequest> __Marshaller_greet_GroupListRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.GroupListRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.ResultReply> __Marshaller_greet_ResultReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.ResultReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.GroupInfoRequest> __Marshaller_greet_GroupInfoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.GroupInfoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.GroupIDRequest> __Marshaller_greet_GroupIDRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.GroupIDRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.UserInfoRequest> __Marshaller_greet_UserInfoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.UserInfoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.MessageContentRequest> __Marshaller_greet_MessageContentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.MessageContentRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcGreeter.GroupListRequest, global::GrpcGreeter.ResultReply> __Method_GetGroupList = new grpc::Method<global::GrpcGreeter.GroupListRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupList",
        __Marshaller_greet_GroupListRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply> __Method_CreateGroup = new grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGroup",
        __Marshaller_greet_GroupInfoRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply> __Method_UpdateGroup = new grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGroup",
        __Marshaller_greet_GroupInfoRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply> __Method_UpdateGroupMember = new grpc::Method<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGroupMember",
        __Marshaller_greet_GroupInfoRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply> __Method_GetGroupMember = new grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupMember",
        __Marshaller_greet_GroupIDRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply> __Method_GetGroupInfo = new grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupInfo",
        __Marshaller_greet_GroupIDRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply> __Method_DeleteGroup = new grpc::Method<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGroup",
        __Marshaller_greet_GroupIDRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply> __Method_SaveUser = new grpc::Method<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveUser",
        __Marshaller_greet_UserInfoRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply> __Method_Init = new grpc::Method<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Init",
        __Marshaller_greet_UserInfoRequest,
        __Marshaller_greet_ResultReply);

    static readonly grpc::Method<global::GrpcGreeter.MessageContentRequest, global::GrpcGreeter.ResultReply> __Method_SendMessage = new grpc::Method<global::GrpcGreeter.MessageContentRequest, global::GrpcGreeter.ResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendMessage",
        __Marshaller_greet_MessageContentRequest,
        __Marshaller_greet_ResultReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcGreeter.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> GetGroupList(global::GrpcGreeter.GroupListRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> CreateGroup(global::GrpcGreeter.GroupInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> UpdateGroup(global::GrpcGreeter.GroupInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> UpdateGroupMember(global::GrpcGreeter.GroupInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 获取群组内用户列表
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> GetGroupMember(global::GrpcGreeter.GroupIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> GetGroupInfo(global::GrpcGreeter.GroupIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> DeleteGroup(global::GrpcGreeter.GroupIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 保存用户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> SaveUser(global::GrpcGreeter.UserInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 获取用户的初始化信息内容
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> Init(global::GrpcGreeter.UserInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 发送消息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcGreeter.ResultReply> SendMessage(global::GrpcGreeter.MessageContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGroupList, serviceImpl.GetGroupList)
          .AddMethod(__Method_CreateGroup, serviceImpl.CreateGroup)
          .AddMethod(__Method_UpdateGroup, serviceImpl.UpdateGroup)
          .AddMethod(__Method_UpdateGroupMember, serviceImpl.UpdateGroupMember)
          .AddMethod(__Method_GetGroupMember, serviceImpl.GetGroupMember)
          .AddMethod(__Method_GetGroupInfo, serviceImpl.GetGroupInfo)
          .AddMethod(__Method_DeleteGroup, serviceImpl.DeleteGroup)
          .AddMethod(__Method_SaveUser, serviceImpl.SaveUser)
          .AddMethod(__Method_Init, serviceImpl.Init)
          .AddMethod(__Method_SendMessage, serviceImpl.SendMessage).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetGroupList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupListRequest, global::GrpcGreeter.ResultReply>(serviceImpl.GetGroupList));
      serviceBinder.AddMethod(__Method_CreateGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(serviceImpl.CreateGroup));
      serviceBinder.AddMethod(__Method_UpdateGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(serviceImpl.UpdateGroup));
      serviceBinder.AddMethod(__Method_UpdateGroupMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupInfoRequest, global::GrpcGreeter.ResultReply>(serviceImpl.UpdateGroupMember));
      serviceBinder.AddMethod(__Method_GetGroupMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(serviceImpl.GetGroupMember));
      serviceBinder.AddMethod(__Method_GetGroupInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(serviceImpl.GetGroupInfo));
      serviceBinder.AddMethod(__Method_DeleteGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.GroupIDRequest, global::GrpcGreeter.ResultReply>(serviceImpl.DeleteGroup));
      serviceBinder.AddMethod(__Method_SaveUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply>(serviceImpl.SaveUser));
      serviceBinder.AddMethod(__Method_Init, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.UserInfoRequest, global::GrpcGreeter.ResultReply>(serviceImpl.Init));
      serviceBinder.AddMethod(__Method_SendMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcGreeter.MessageContentRequest, global::GrpcGreeter.ResultReply>(serviceImpl.SendMessage));
    }

  }
}
#endregion
